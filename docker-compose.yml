version: '3.8'

services:
  api-gateway:
    build:
      context: .
    container_name: api-gateway-dev
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - microservices_network-adson

  order-service:
    build:
      context: ./services/order-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/order-service:/app  
      - /app/node_modules      
    ports:
      - "${ORDER_SERVICE_PORT:-3001}:3001"
    env_file:
      - .env
    environment:
      - PORT=${ORDER_SERVICE_PORT:-3001}  
    networks:
      - microservices_network-adson
    depends_on:
      -  order-service-db

  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/payment-service:/app  
      - /app/node_modules      
    ports:
      - "${PAYMENT_SERVICE_PORT:-3002}:3002"
    env_file:
      - .env
    environment:
      - PORT=${ORDER_SERVICE_PORT:-3002}  
    networks:
      - microservices_network-adson
    depends_on:
      -  payment-service-db    

  order-service-db:
    image: mongo:5.0
    container_name: order-service-db
    volumes:
      - './services/order-service/./mongod.conf:/etc/mongod.conf' 
      - 'order-db-data:/data/db'
    environment:
      - 'MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME:-dev}'
      - 'MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-dev1234@}'
      - 'MONGO_INITDB_DATABASE=${MONGO_DATABASE:-order-service}'
      - 'PUID=1000'
      - 'PGID=1000'
    ports:
      - "27017:27017"         
    networks:
      - microservices_network-adson
      
  payment-service-db:
    image: mongo:5.0
    container_name: payment-service-db
    volumes:
      - './services/payment-service/./mongod.conf:/etc/mongod.conf' 
      - 'payment-db-data:/data/db'
    environment:
      - 'MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME:-dev}'
      - 'MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-dev1234@}'
      - 'MONGO_INITDB_DATABASE=${MONGO_DATABASE:-payment-service}'
      - 'PUID=1000'
      - 'PGID=1000'
    ports:
      - "27018:27017"         
    networks:
      - microservices_network-adson    

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
    networks:
      - microservices_network-adson

volumes:
  dist:
  order-db-data:
  payment-db-data:

networks:
  microservices_network-adson:
    external: true